openapi: 3.0.3
info:
  title: Instahyre Coding Assignment
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /search-contact/:
    get:
      operationId: search_contact_retrieve
      description: Search for a contact by phone number.
      parameters:
      - in: query
        name: phone_number
        schema:
          type: string
        description: Phone number to search for
        required: true
      tags:
      - search-contact
      security:
      - tokenAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /search-name/:
    get:
      operationId: search_name_retrieve
      description: Search for a contact by name.
      parameters:
      - in: query
        name: name
        schema:
          type: string
        description: Name to search for
        required: true
      tags:
      - search-name
      security:
      - tokenAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /spam/:
    post:
      operationId: spam_create
      description: Mark a number as spam.
      tags:
      - spam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpamNumber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpamNumber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpamNumber'
        required: true
      security:
      - tokenAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpamNumber'
          description: ''
  /user/create/:
    post:
      operationId: user_create_create
      description: Create a new user.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /user/token/:
    post:
      operationId: user_token_create
      description: Retrieve authentication token.
      tags:
      - user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      description: Serializer for the user authentication token.
      properties:
        phone:
          type: string
        password:
          type: string
      required:
      - password
      - phone
    Contact:
      type: object
      description: Define a serializer for contact model.
      properties:
        contact_name:
          type: string
          maxLength: 50
        contact_phone:
          type: string
          maxLength: 25
        spam_count:
          type: integer
          readOnly: true
        spam_likelihood:
          type: string
          readOnly: true
        user_email:
          type: string
          readOnly: true
      required:
      - contact_name
      - contact_phone
      - spam_count
      - spam_likelihood
      - user_email
    SpamNumber:
      type: object
      description: Define a serializer for number.
      properties:
        phone:
          type: string
          pattern: ^(\+\d{1,3})?\d{9,13}$
      required:
      - phone
    User:
      type: object
      description: Serializer for the user object.
      properties:
        phone:
          type: string
          pattern: ^(\+\d{1,3})?\d{9,13}$
          maxLength: 25
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 5
        name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          nullable: true
          maxLength: 50
      required:
      - name
      - password
      - phone
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
